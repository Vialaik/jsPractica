"use strict";

//---------------------------------------------------------------------------
//                            ПЕРЕМЕННЫЕ
//---------------------------------------------------------------------------
let number5 = 5;
let NUmber = 5;

const primeryConst = 34;

//---------------------------------------------------------------------------
//                            ТИПИ ДАННИХ
//---------------------------------------------------------------------------

//number = 24; //  число
//string = "hfbvf"; // рядок записується в в лапках
// booleans = false / true; // Булевий або логічний тип. Логічний тип може приймати лише два значення: true (істина) та false (хиба).
// null; // спеціальне значення, яке представляє “нічого”, “порожнє” або “невідоме значення”.
// undefined; // означає, що “значення не присвоєно”.
// Symbol; //використовується для створення унікальних ідентифікаторів в об’єктах.
// BigInt; // спеціальний числовий тип, який забезпечує підтримку цілих чисел довільної довжини. створюється через додавання n у кінець цілого числа

//ОБЬЄКТИ

let users = `nsnd`; // синтаксис "конструктора об’єктів"
let user = {
   // синтаксис "літералу об’єкта
   name: "Іван", // за ключем "name" зберігаємо значення "Іван"
   age: 30, // за ключем "age" зберігати значення "30"
};
// отримаємо значення властивостей об’єкта:

//---------------------------------------------------------------------------
//                            ОБЩЕНИЕ С ПОЛЬЗОВАТЕЛЕМ
//---------------------------------------------------------------------------

// alert(user.name); // Іван
// alert(user.age); // 30
// let erroress = confirm(`lknlkve`);
// let answer = prompt(`mv;lfv 18`, `17`);
// console.log(erroress);
// console.log(typeof erroress);

// console.log(answer);
// console.log(typeof answer);

const personDecr = [];
personDecr[0] = prompt(`цвет глаз`, `зеленый`);
personDecr[1] = prompt(`цвет волос`, `белый`);
personDecr[2] = prompt(`цвет кожи`, `коричневы`);

// document.write(personDecr);

// ИНТЕРПОЛЯЦИЯ
let ketu = `штангу`;
let ketuCount = 4;
console.log(`подять ${ketu} ${ketuCount} раза`);

//---------------------------------------------------------------------------
//                            ОПЕРАРТОРЫ
//---------------------------------------------------------------------------

// + влажует числа и канкатинирует строк, + перед строкой содержащей цифры - меняет тип со строки на число
console.log(4 + 4);
console.log(`жвачка ` + `персик`);
console.log(`4` + +`4`);
console.log(4 + +`4`);
// ++ инкримент - дискримент, префиксные - постфиксный (до и после)
let incr = 10;
let desc = 10;
++incr;
desc--;
console.log(incr);
console.log(desc);
// % отдает ОСТАТОК от диления
console.log(10 % 3);
// = присвоение
// == равенство (проверяет по значению)
// === строгое равенство (проверяет по типу)
console.log(4 + 4 == `8`);
// && - и
// || - или
// ! - отрицание (не)

//---------------------------------------------------------------------------
//                            УСЛОВИЯ
//---------------------------------------------------------------------------

// if else
if (4 == 6) {
   console.log(`ok!`);
} else {
   console.log(`ERROR!`);
}

// тенарный оператор

num == 5 ? console.log(`true`) : console.log(`false`);

// switch case
let num = 4;
switch (num) {
   case 6:
      console.log(`менше`);
      break;
   case 10:
      console.log(`менше`);
      break;
   case 3:
      console.log(`больше`);
      break;
   case 5:
      console.log(`ОК`);
      break;
   default:
      console.log(`не угодал`);
      break;
}
